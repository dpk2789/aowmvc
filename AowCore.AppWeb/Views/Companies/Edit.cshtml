@model AowCore.AppWeb.ViewModels.CompanyViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>
    <a asp-action="Index" class="btn btn-sm btn-primary">Back to List</a>
    Edit Company
</h1>

<hr />
<div class="row">
    <form asp-action="Edit" id="questionForm">
        <input type="hidden" asp-for="Id" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label asp-for="CompanyName" class="control-label"></label>
                <input asp-for="CompanyName" class="form-control" />
                <span asp-validation-for="CompanyName" class="text-danger"></span>
            </div>
            <div class="form-group col-md-6">
                <label asp-for="TaxNumber" class="control-label"></label>
                <input asp-for="TaxNumber" class="form-control" />
                <span asp-validation-for="TaxNumber" class="text-danger"></span>
            </div>
            <div class="form-group col-md-6">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group col-md-6">
                <label asp-for="Mobile" class="control-label"></label>
                <input asp-for="Mobile" class="form-control" />
                <span asp-validation-for="Mobile" class="text-danger"></span>
            </div>
            <div class="form-group col-md-6">
                <label for="inputPassword4">Currency </label>
                @*@Html.DropDownList(Model.Currency, ViewBag.Currency as SelectList, null, htmlAttributes: new { @class = "form-control" })*@
                @*@Html.DropDownList("Currency", null, htmlAttributes: new { @class = "form-control" })*@
                <select asp-for="Currency" class="form-control" asp-items="@ViewBag.Currency"></select>
                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                <label asp-for="Country" class="control-label"></label>

                @Html.EditorFor(model => model.Country, new
           {
               htmlAttributes = new
               {

                   @class = "form-control",
                   @placeholder = "Enter Country Name",
                   data_url = @Url.Action("GetCountriesForAutocomplete", "Companies")
               }
           })
                @Html.HiddenFor(c => c.CountryId)
                <span asp-validation-for="Country" class="text-danger"></span>
            </div>
        </div>

        <div class="form-horizontal">
            <h3>Shipping Address</h3>
            <hr />
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="inputEmail4">Name</label>
                    @Html.EditorFor(model => model.ShippingName, new { htmlAttributes = new { @class = "form-control", placeholder = "Print Name" } })
                </div>
                <div class="form-group col-md-6">
                    <label for="inputPassword4">Contact </label>
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", placeholder = "Contact No." } })
                </div>
            </div>

            <div class="form-group">
                <label for="inputAddress">Address</label>
                @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="form-group">
                <label for="inputAddress2">Address 2</label>
                @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "City" } })
                </div>
                <div class="form-group col-md-4">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", placeholder = "State/Province" } })
                </div>
                <div class="form-group col-md-2">
                    @Html.EditorFor(model => model.PinCode, new { htmlAttributes = new { @class = "form-control", placeholder = "PinCode/ZipCode" } })
                </div>

                <div class="form-group col-md-6">

                    

                </div>

                <div class="form-group col-md-6">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>

            </div>
        </div>

    </form>
</div>

<div class="row">
    @(await Component.InvokeAsync("FYrList", new { id = Model.Id }) )
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $("#Country").autocomplete({
            minLength: 1,
            source: function (request, response) {
                var url = $(this.element).data("url");
                $.getJSON(url, { term: request.term }, function (data) {
                    response(data)
                })
            },
            appendTo: $(".modal-body ui-autocomplete-input form-control"),
            select: function (event, ui) {
                $("#CountryId").val(ui.item.id);
                $("#Country").val(ui.item.value);
                // $("#Net").val(ui.item.OutStanding);
            },
            change: function (event, ui) {
                if (!ui.item) {
                    $(event.target).val("");
                }
            }
        });

        $("#State").autocomplete({
            minLength: 1,
            source: function (request, response) {
                var url = $(this.element).data("url");
                $.getJSON(url, { term: request.term }, function (data) {
                    response(data)
                })
            },
            appendTo: $(".modal-body ui-autocomplete-input form-control"),
            select: function (event, ui) {
                $("#StateId").val(ui.item.Id);
                $("#State").val(ui.item.Name);
                // $("#Net").val(ui.item.OutStanding);
            },
            change: function (event, ui) {
                if (!ui.item) {
                    $(event.target).val("");
                }
            }
        });
    </script>
}
